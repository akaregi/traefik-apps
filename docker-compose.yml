version: "3.5"

services:
  traefik:
    image: traefik:banon
    container_name: "traefik-apps"
    restart: always
    command:
      - "--api.dashboard=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--certificatesresolvers.letsencrypt.acme.dnschallenge=true"
      - "--certificatesresolvers.letsencrypt.acme.dnschallenge.provider=cloudflare"
      - "--certificatesresolvers.letsencrypt.acme.email=${EMAIL}"
      - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"
      - "--certificatesresolvers.letsencrypt.acme.keyType=EC256"
    ports:
      - "80:80"
      - "443:443"
    labels:
      - "traefik.enable=true"
      # Dashboard
      - "traefik.http.routers.traefik.rule=(Host(`${DOMAIN}`) && PathPrefix(`/traefik`))"
      - "traefik.http.routers.traefik.service=api@internal"
      - "traefik.http.routers.traefik.tls.certresolver=letsencrypt"
      - "traefik.http.routers.traefik.entrypoints=websecure"
      - "traefik.http.routers.traefik.middlewares=dashboardauth"
      - "traefik.http.middlewares.dashboardauth.basicauth.users=${TRAEFIK_DASHBOARD_ADMIN_PASSWORD}"
      # HTTPS Redirect
      - "traefik.http.routers.http-catchall.rule=hostregexp(`{host:.+}`)"
      - "traefik.http.routers.http-catchall.entrypoints=web"
      - "traefik.http.routers.http-catchall.middlewares=redirect-to-https@docker"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
    environment:
      - CLOUDFLARE_EMAIL=${CLOUDFLARE_EMAIL}
      - CLOUDFLARE_DNS_API_TOKEN=${CLOUDFLARE_TOKEN}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./letsencrypt:/letsencrypt
    networks:
      - external_network

  web:
    image: akarregi/misskey:12.111.1
    container_name: "misskey"
    restart: always
    links:
      - db
      - redis
    depends_on:
      - traefik
      - db
      - redis
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=misskey_external_network"
      - "traefik.http.services.misskey-web.loadbalancer.server.port=3000"
      - "traefik.http.routers.misskey-web.rule=Host(`${DOMAIN}`)"
      - "traefik.http.routers.misskey-web.entrypoints=websecure"
      - "traefik.http.routers.misskey-web.tls.certresolver=letsencrypt"
    volumes:
      - ./files:/misskey/files
      - ./config/misskey:/misskey/.config:ro
    networks:
      - internal_network
      - external_network

  redis:
    image: redis:7-alpine
    container_name: "redis"
    restart: always
    volumes:
      - ./redis:/data
    networks:
      - internal_network

  db:
    image: postgres:15-alpine
    container_name: "postgres"
    restart: always
    env_file:
      - config/database.env
    volumes:
      - ./db:/var/lib/postgresql/data
    networks:
      - internal_network

networks:
  external_network:
    name: misskey_external_network
  internal_network:
    internal: true
